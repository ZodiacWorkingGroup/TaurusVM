00:
	Name: SET
	Minimum arguments: 1
	Maximum arguments: N/A
	Action: if argc == 1, zero reg args[0] to 0. Else, set reg args[0] to args[1], reg args[0]+1 to args[2], etc. for length of arguments.
01:
	Name: MOV
	Minimum arguments: 2
	Maximum arguments: N/A
	Action: Copy value of reg args[1] to each other reg
02:
	Name: SUM
	Minimum arguments: 2
	Maximum arguments: N/A
	Action: Set reg args[0] to sum of regs args[1:]
03:
	Name: DIF
	Minimum arguments: 2
	Maximum arguments: N/A
	Action: Set reg args[0] to difference of regs args[1:] (that is, subtract reg args[2] from reg args[1] then reg args[3] from that, etc.)
04:
	Name: PRO
	Minimum arguments: 2
	Maximum arguments: N/A
	Action: set reg args[0] to product of regs args[1:]
05:
	Name: QUO
	Minimum arguments: 2
	Maximum arguments: N/A
	Action: Set reg args[0] to quotient of regs args[1:] (that is, divide reg args[1] by reg args[2] then that by reg args[3], etc.)
06:
	Name: EXP
	Minimum arguments: 2
	Maximum arguments: N/A
	Action: Set reg args[0] to value of args[1]**args[2]**args[3]...
07:
	Name: SQRT
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = sqrt(reg args[1])
08:
	Name: SIN
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = sin(reg args[1])
09:
	Name: COS
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = cos(reg args[1])
0A:
	Name: TAN
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = cos(reg args[1])
0B:
	Name: ASIN
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = ASIN(reg args[1])
0C: 
	Name: ACOS
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = acos(reg args[1])
0D:
	Name: ATAN
	Minimum arguments: 2
	Maximum arguments: 2
	Action: reg args[0] = atan(reg args[1])
0E:
	Name: LOG
	Minimum arguments: 2
	Maximum arguments: 3
	Action: reg args[0] = log(reg args[1], reg args[2]]) (reg args[2] = 2 if not defined)
0F:
	Name: 
	Minimum arguments: 
	Maximum arguments: 
	Action: 
10:
	Name: 
	Minimum arguments: 
	Maximum arguments: 
	Action: 
